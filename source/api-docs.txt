.. _rm-rest-api:

============================
Relational Migrator REST API
============================

.. facet::
   :name: genre 
   :values: tutorial

.. meta:: 
   :description: Learn about the MongoDB Relational Migrator REST API and how to use it.
   :keywords: data migration, rest api, open api

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

The Relational Migrator REST API provides you with programmatic access 
to Relation Migrator with HTTPS endpoints. The REST API is a 
Relational Migrator service between your application and your source and 
destination databases that you can send requests to manage your migration jobs.

You don't need to install any additional extensions or packages to use 
the Relational Migrator REST API. The functionality is part of the 
Relational Migrator product. The REST API runs on the same port that 
you access the application on (either ``8278``, ``8080``, or ``443``).

How the REST API Works
----------------------

The Relational Migrator REST API:

- Runs on the client computer or server that the Relation Migrator 
  application is installed on.
- The Rest API is controlled by the host adapter binding.
- The Relational Migrator REST API **does not** currently support 
  authentication.

When to Use REST API
--------------------

Use the Relational Migrator REST API when:

- You want to use a task scheduler such as 
  `CRON <https://en.wikipedia.org/wiki/Cron>`__ and define dynamic 
  :ref:`table filters <rm-table-filters>` within a project. For example, 
  using a table filter with 
  ``WHERE DATEDIFF(CURDATE(), last_modified) <= 1`` to batch migrate 
  data on a cadence from your relational database to MongoDB. 

- You want to programmatically create Relational Migrator migration jobs 
  dynamically. For example, using connection strings from 
  multiple databases without manually configuring them in the GUI.

- You generally prefer scripting your workflows instead of using a GUI.

Learn More
----------

For Relational Migrator REST API endpoints, example 
requests, and responses, see :ref:`Endpoints <rm-api-resources-spec>`.

.. toctree::
   :titlesonly:
   
   {+migrator-api-endpoints+} </api-docs/rest-api-spec>